{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","legth","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wOAgBeA,EAdF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAGtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,SACpD,gCACI,6BAAKL,IACL,4BAAIC,WCcLK,EArBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAGPC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAQ,cAAC,EAAD,CAEJT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAKb,OAGA,8BACGH,KCEQI,EAjBG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAE7B,OACI,qBAAKX,UAAU,MAAf,SACI,uBACIA,UAAW,mCACXY,KAAK,SACLC,YAAY,wBACZC,SAAYH,OCMbI,G,MAbA,SAACC,GAEZ,OAEI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACKJ,EAAMK,aC6CJC,E,kDA7CX,aAAc,IAAD,8BACT,gBAgBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAhBzC,EAAKC,MAAM,CACPxB,OAAS,GACTM,YAAY,IAJP,E,gEASO,IAAD,OACfmB,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAACrB,OAAO6B,S,+BAShC,IAAD,EAC0BC,KAAKN,MAA5BxB,EADH,EACGA,OAAQM,EADX,EACWA,YACTyB,EAAiB/B,EAAOgC,QAAO,SAAAC,GACjC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS7B,EAAY4B,kBAGzD,OAAQlC,EAAOoC,MAGX,sBAAKxC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUnB,OAAQ+B,SAN9B,6C,GA9BUM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAO1BX,M","file":"static/js/main.b3cc3da1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name,email,id}) => {\n\n    // const {name,email,id} = props;\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/${id}?200x200`} alt='robo'></img>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>    \n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList=({robots})=>{\n\n\n    const cardComponent = robots.map((user, i)=>{\n        return (<Card \n            key={i}  \n            id={robots[i].id} \n            name={robots[i].name} \n            email={robots[i].email}/>);\n    });\n    return (\n    \n\n    <div>\n      {cardComponent}\n    </div>\n\n    );\n\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\n    return (\n        <div className='pa2'>\n            <input\n                className= 'pa3 ba b--green bg-lightest-blue'\n                type='search' \n                placeholder='search robots by name'\n                onChange = {searchChange} \n            />\n        </div>\n\n\n    );\n\n}\n\nexport default SearchBox;","import React from 'react';\n\n\nconst Scroll = (props) => {\n\n    return (\n\n        <div style={{overflowY:'scroll', border:'1px solid black', height:'800px'}} >\n            {props.children}\n        </div>\n\n    );\n\n\n}\n\nexport default Scroll;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css'\nimport Scroll from '../components/Scroll';\n\nclass App extends Component {\n\n    constructor(){ //smartcomponent\n        super();\n        this.state={\n            robots : [],\n            searchfield:''\n        }\n    }\n    \n    \n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then( response => response.json())\n        .then( users =>this.setState({robots:users}));\n        \n    }\n    \n    \n    onSearchChange = (event) =>{    \n        this.setState({searchfield: event.target.value})\n    }\n\n    render(){ \n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot=>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n\n        return !robots.legth?\n        <h1>Loading</h1> : \n        (\n            <div className='tc'>\n                <h1 className='f2'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}  />\n                <Scroll>\n                    <CardList robots={filteredRobots}/>\n                </Scroll>\n            </div>\n        );\n    }\n    \n\n\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}